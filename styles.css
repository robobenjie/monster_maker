:root {
    --border-style: 4px solid #666;
    --border-radius: 12px;
}

.container {
    max-width: 1200px;
    margin: 40px auto;
    padding: 20px;
}

.character-mat {
    width: 800px;
    height: 500px;
    border: var(--border-style);
    border-radius: var(--border-radius);
    position: relative;
    background: #f5f5f5;
    padding: 20px;
}

#characterName {
    position: absolute;
    top: 18px;
    left: 10px;
    width: 200px;
    padding: 8px;
    font-size: 1.2rem;
    border: var(--border-style);
    border-radius: var(--border-radius);
    z-index: 1;
    font-family: 'Audiowide', cursive;
    text-overflow: ellipsis;
    white-space: nowrap;
}

#characterName::placeholder {
    opacity: 0.7;
}

/* Add new class for when text needs to be smaller */
#characterName.small-text {
    font-size: 1rem;
}

#characterName.smaller-text {
    font-size: 0.8rem;
}

#characterName.smallest-text {
    font-size: 0.6rem;
}

.abilities-container {
    position: absolute;
    top: 40px;
    right: 20px;
    width: 380px;
    height: 440px;
    padding: 15px;
    border: var(--border-style);
    border-radius: var(--border-radius);
    background: rgba(255, 255, 255, 0.8);
    display: flex;
    flex-direction: column;
}

.abilities-list {
    flex-grow: 1;
    overflow-y: auto;
}

.ability-item {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 15px;
    min-height: 40px;
    position: relative;
}

.ability-row {
    display: flex;
    align-items: center;
    gap: 10px;
    min-height: 40px;
    position: relative;
}

.ability-checkbox {
    width: 30px;
    height: 30px;
    border: var(--border-style);
    border-radius: var(--border-radius);
    background: white;
    flex-shrink: 0;
    margin-right: -5px;
    position: relative;
    z-index: 1;
}

.ability-number {
    width: 30px;
    height: 30px;
    border: var(--border-style);
    border-radius: var(--border-radius);
    display: flex;
    align-items: center;
    justify-content: center;
    background: white;
    flex-shrink: 0;
    position: relative;
    z-index: 0;
}

/* Update arrow between boxes */
.ability-checkbox::after {
    content: '➜';
    position: absolute;
    right: -17px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 24px;
    z-index: 2;
    color: var(--mat-color, #f5f5f5);
    text-shadow: 
        -1px -1px 0 var(--border-color, #666),
        1px -1px 0 var(--border-color, #666),
        -1px 1px 0 var(--border-color, #666),
        1px 1px 0 var(--border-color, #666);
    pointer-events: none;
}

.ability-number input {
    width: 25px;
    text-align: center;
    border: none;
    font-family: 'Audiowide', cursive;
    font-size: 1rem;
    background: transparent;
}

.ability-number input:focus {
    outline: none;
}

.ability-text {
    flex-grow: 1;
    display: flex;
    align-items: center;
    min-height: 40px;
}

.ability-text textarea {
    width: 100%;
    min-height: 24px;
    padding: 4px 8px;
    border: none;
    font-family: Arial, sans-serif;
    font-size: 0.85rem;
    background: transparent;
    line-height: 1.4;
    resize: none;
    outline: none;
    overflow: hidden;
    align-self: center;
}

.ability-text textarea:focus {
    outline: none;
}

.delete-ability {
    position: absolute;
    right: 0px;
    top: 15%;
    transform: translateY(-50%);
    width: 25px;
    height: 25px;
    border: var(--border-style);
    border-radius: var(--border-radius);
    background: #ff4444;
    color: white;
    display: none;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 1;
}

.ability-item:hover .delete-ability {
    display: flex;
}

.add-ability {
    margin-top: 10px;
    padding: 8px;
    background: #4CAF50;
    color: white;
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
}

.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    align-items: center;
    justify-content: center;
}

.modal-content {
    background: white;
    padding: 20px;
    border-radius: var(--border-radius);
    text-align: center;
}

.modal-buttons {
    display: flex;
    gap: 10px;
    justify-content: center;
    margin-top: 15px;
}

.button-container {
    margin-bottom: 20px;
    display: flex;
    gap: 10px;
}

button {
    padding: 8px 16px;
    font-size: 1rem;
    cursor: pointer;
    background-color: #4CAF50;
    color: white;
    border: var(--border-style);
    border-radius: var(--border-radius);
}

button:hover {
    background-color: #45a049;
}

.image-container {
    position: absolute;
    top: 40px;
    left: 20px;
    width: 360px;
    height: 360px;
    border: var(--border-style);
    border-radius: var(--border-radius);
    cursor: pointer;
    overflow: hidden;
}

.image-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: calc(var(--border-radius) - 4px);
}

.image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(0,0,0,0.1);
    color: #333;
    pointer-events: none;
}

.image-container:hover .image-overlay {
    background: rgba(0,0,0,0.2);
}

#colorButton {
    background-color: #4CAF50;
}

#monsterType {
    position: absolute;
    top: 405px;
    left: 40px;
    width: 300px;
    padding: 8px;
    font-size: 1rem;
    font-family: 'Audiowide', cursive;
    border: var(--border-style);
    border-radius: 0 0 var(--border-radius) var(--border-radius);
    text-align: center;
}

#monsterType::placeholder {
    opacity: 0.7;
}

#hpContainer {
    position: absolute;
    bottom: 22px;
    left: 40px;
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px;
    font-size: 1.2rem;
    font-family: 'Audiowide', cursive;
    border: var(--border-style);
    border-radius: var(--border-radius);
    background: white;
}

#hpContainer span {
    color: inherit;
}

#monsterHP {
    width: 80px;
    border: none;
    background: transparent;
    font-size: 1.2rem;
    font-family: 'Audiowide', cursive;
    padding: 0;
    color: inherit;
}

#monsterHP::-webkit-inner-spin-button,
#monsterHP::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

#monsterHP::placeholder {
    opacity: 0.7;
}

#armorContainer {
    position: absolute;
    bottom: 22px;
    left: 230px;
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px;
    font-size: 1.2rem;
    font-family: 'Audiowide', cursive;
    border: var(--border-style);
    border-radius: var(--border-radius);
    background: white;
}

#armorContainer span {
    color: inherit;
}

#monsterArmor {
    width: 80px;
    border: none;
    background: transparent;
    font-size: 1.2rem;
    font-family: 'Audiowide', cursive;
    padding: 0;
    color: inherit;
}

#monsterArmor::-webkit-inner-spin-button,
#monsterArmor::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

#monsterArmor::placeholder {
    opacity: 0.7;
}

/* Add print-specific styles */
@media print {
    .controls {
        display: none !important;
    }
    
    .character-mat {
        -webkit-print-color-adjust: exact !important;
        print-color-adjust: exact !important;
        color-adjust: exact !important;
    }

    /* Ensure white backgrounds stay white */
    #hpContainer, #abilities {
        -webkit-print-color-adjust: exact !important;
        print-color-adjust: exact !important;
        color-adjust: exact !important;
    }

    .no-print {
        display: none !important;
    }

    /* Hide image placeholder and HP placeholder */
    .image-overlay {
        display: none !important;
    }

    input::placeholder {
        color: transparent !important;
    }

    /* Make empty image container white */
    .image-container {
        background: white !important;
    }

    /* But keep the actual image visible if it exists */
    .image-container img:not([src$="CYII="]) {
        background: transparent !important;
    }
} 

.attack-grid {
    display: grid;
    gap: 2px 1px;
    background: white;
    padding: 4px;
    border: 1px solid #ccc;
    border-radius: 0;
    margin: 0 5px;
}

/* Remove the old grid classes */
.grid-8x5, .grid-7x7 {
    display: none;
}

/* Add new hex grid styles */
.hex-grid {
    display: inline-block;
    font-size: 0;
    padding: 4px;
    width: 75px;
}

.grid-cell {
    position: relative;
    width: 14px;
    height: 16.2px; /* 14 * 1.155 ≈ 16.2 */
    background-color: white;
    margin: -0.5px; /* Negative margin to overlap borders */
    display: inline-block;
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    cursor: pointer;
    font-size: 8px;
    border: 1px solid #ccc;
    vertical-align: top;
    box-sizing: content-box; /* Ensure border doesn't affect size */
}

.grid-row {
    display: block;
    height: 12.15px; /* 16.2 * 0.75 to create proper overlap */
    white-space: nowrap;
    margin-top: -0.5px; /* Negative margin to overlap borders between rows */
}

.grid-row:nth-child(even) {
    margin-left: 7px; /* Half the hex width */
}

.grid-cell span {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    font-size: 8px;
    line-height: 1;
    height: 8px;
    width: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.grid-cell.arrow {
    background: #eee;
    cursor: default;
}

.ability-buttons {
    display: flex;
    gap: 10px;
    margin-top: 10px;
} 

.ability-content {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 4px;
    padding: 0;
    border: none;
}

.ability-name {
    font-family: 'Audiowide', cursive;
    font-size: 0.8rem;
    border: 1px solid rgba(0, 0, 0, 0.2);
    border-radius: 4px;
    background: white;
    padding: 2px 4px;
    margin-left: 0px;
    width: 50%;
    min-width: 100px;
}

.ability-name:focus {
    outline: none;
}

/* Ensure invisible cells don't show borders */
.grid-cell.invisible {
    visibility: hidden;
    background-color: transparent;
    border-color: transparent;
}